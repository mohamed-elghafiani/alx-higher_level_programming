# matrix_divided.txt

===============================
How to use 2-matrix_divided.py
===============================

The file contains one function ``matrix_divided(matrix, div)`` that takes two argumenst a `matrix` (list of lists) and a number `div`
The functions will return a new matrix which is the result of the division of matrix/div

The following test cases illustrate its behavior:

::
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> mx = [[1, 2, 3], [4, 5, 6]]
>>> div = 2
>>> matrix_divided(mx, div)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

::
>>> div = 2.567
>>> matrix_divided(mx, div)
[[0.39, 0.78, 1.17], [1.56, 1.95, 2.34]]

::
>>> div = "a"
>>> matrix_divided(mx, div)
Traceback (most recent call last):
	...
TypeError: div must be a number

::
>>> div = 0
>>> matrix_divided(mx, div)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

::
>>> mx = [[1, 2, 3], [4, 5]]
>>> div = 2
>>> matrix_divided(mx, div)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

::
>>> mx = [[1, 2, 3], [4, 5, "a"]]
>>> matrix_divided(mx, div)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

::
>>> matrix_divided([[1, 2], [1, 2]])
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

::
>>> matrix_divided([[1, nan], [1, 2]], nan)
Traceback (most recent call last):
  ...
NameError: name 'nan' is not defined
