# tests/7-base_geometry.txt

BaseGeometry class tests


::
>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

::
>>> bg = BaseGeometry()

::
>>> bg.area()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 8, in area
    raise Exception("area() is not implemented")
Exception: area() is not implemented

::
>>> bg.integer_validator("width", 12)
>>> bg.integer_validator("width", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 16, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: width must be greater than 0

::
>>> bg.integer_validator("width", -6)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 16, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: width must be greater than 0

::
>>> bg.integer_validator("width", "width")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: width must be an integer

::
>>> bg.integer_validator("width", [1])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: width must be an integer

::
>>> bg.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

::
>>> bg.integer_validator("name")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'

::
>>> bg.integer_validator("name", True)
Traceback (most recent call last):
	...
TypeError: name must be an integer

::
>>> bg.integer_validator("name", {1: 2})
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: name must be an integer

::
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: name must be an integer

::
>>> bg.integer_validator("name", (1, ))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: name must be an integer
